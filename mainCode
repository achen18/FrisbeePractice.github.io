<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Throw Force Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
        }
        .output {
            font-size: 20px;
            margin: 20px;
        }
        .result {
            font-size: 24px;
            font-weight: bold;
            color: green;
        }
        .max-force {
            font-size: 22px;
            font-weight: bold;
            color: blue;
        }
    </style>
</head>
<body>
    <h1>Throw Force Calculator</h1>
    <p>This app uses the phone's accelerometer to estimate the force of your throw.</p>
    <div class="output">
        <p>Acceleration X: <span id="accX">0</span> m/s²</p>
        <p>Acceleration Y: <span id="accY">0</span> m/s²</p>
        <p>Acceleration Z: <span id="accZ">0</span> m/s²</p>
        <p class="result" id="forceResult">Throw Force: 0 N</p>
        <p class="max-force" id="maxForceResult">Max Force: 0 N</p>
    </div>

    <script>
        // Variables to store acceleration data
        let accX = 0;
        let accY = 0;
        let accZ = 0;
        let maxForce = 0; // Variable to track the maximum force during motion
        let isMoving = false; // Flag to check if the device is still moving

        // Function to handle the accelerometer data
        function handleMotion(event) {
            accX = event.acceleration.x;
            accY = event.acceleration.y;
            accZ = event.acceleration.z;

            // Display the acceleration data
            document.getElementById('accX').textContent = accX.toFixed(2);
            document.getElementById('accY').textContent = accY.toFixed(2);
            document.getElementById('accZ').textContent = accZ.toFixed(2);

            // Calculate the magnitude of the acceleration
            const accelerationMagnitude = Math.sqrt(accX ** 2 + accY ** 2 + accZ ** 2);

            // Assuming a simple force = mass * acceleration (F = m * a)
            const massOfPhone = 0.2; // Mass of the phone in kg (approximate)
            const force = massOfPhone * accelerationMagnitude;

            // Update the current force display
            document.getElementById('forceResult').textContent = `Throw Force: ${force.toFixed(2)} N`;

            // Track maximum force during the throw
            if (force > maxForce) {
                maxForce = force;
                document.getElementById('maxForceResult').textContent = `Max Force: ${maxForce.toFixed(2)} N`;
            }
        }

        // Function to detect if the phone has stopped moving
        function detectStop() {
            if (Math.abs(accX) < 0.5 && Math.abs(accY) < 0.5 && Math.abs(accZ) < 0.5) {
                if (isMoving) {
                    // Phone has stopped moving, display the final max force
                    alert(`Throw stopped! Max Force during the throw was: ${maxForce.toFixed(2)} N`);
                    isMoving = false;
                }
            } else {
                isMoving = true; // Phone is still moving
            }
        }

        // Check if the device supports DeviceMotionEvent
        if (window.DeviceMotionEvent) {
            window.addEventListener('devicemotion', handleMotion, true);
            // Check if the phone has stopped moving every 1 second
            setInterval(detectStop, 1000);
        } else {
            alert("DeviceMotion is not supported on this device.");
        }
    </script>
</body>
</html>
